generator client {
  provider = "prisma-client-js"
  output   = "client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Mood {
  id         BigInt    @id @default(autoincrement())
  mood       String    @db.VarChar(255)
  note       String    @db.VarChar(255)
  level      Int
  created_at DateTime  @default(now()) @db.Timestamp
  updated_at DateTime  @updatedAt @db.Timestamp
  user_id    BigInt
  // ai_sentiment      String?
  // ai_keywords       Json?     @db.Json
  // ai_recommendation String?
  // timezone          String    @db.VarChar(255)
  type       String    @db.VarChar(255)
  deleted_at DateTime? @db.Timestamp // nullable DateTime
  // last_ai_update    DateTime? @db.Timestamp
  user       User      @relation("UserMoods", fields: [user_id], references: [id])
  tags       Tag[]     @relation("TagsOnMoods")
}

model User {
  id         BigInt    @id @default(autoincrement())
  email      String    @unique(map: "users_email_unique")
  name       String
  password   String
  deleted_at DateTime? @db.Timestamp // nullable DateTime
  created_at DateTime  @default(now()) @db.Timestamp
  updated_at DateTime  @updatedAt @db.Timestamp
  moods      Mood[]    @relation("UserMoods")
  // theme          String? @db.VarChar(255)
  // oauth_provider String?
  // last_login     DateTime @db.Timestamp
  // timezone       String   @db.VarChar(255)
  tags       Tag[]     @relation("UserTags")
}

model Tag {
  id         BigInt    @id @default(autoincrement())
  name       String
  color      String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime? @db.Timestamp // nullable DateTime
  user_id    BigInt

  user  User   @relation("UserTags", fields: [user_id], references: [id])
  moods Mood[] @relation("TagsOnMoods")
}
